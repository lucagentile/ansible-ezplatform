# {{ ansible_managed }}

{% block server_before %}{% endblock %}

server {
  {% block server_id -%}
  listen {{ ssl_enabled | ternary('[::]:443 ssl http2', '[::]:80') }};
  listen {{ ssl_enabled | ternary('443 ssl http2', '80') }};
  server_name {{ site_hosts_canonical | union(multisite_subdomains_wildcards) | join(' ') }};
  {% endblock %}

  root {{ www_root }}/{{ item.key }}/{{ item.value.current_path | default('current') }}/web;

  {% block assetic_rules -%}
  include /etc/nginx/includes.d/ez_params.d/ez_prod_rewrite_params;
  {% endblock -%}

  # Include image rule for DFS or binary handler
  # include /etc/nginx/includes.d/ez_params.d/ez_rewrite_%BINARY_DATA_HANDLER%image_params;

  {% block legacy_rules -%}
  # Legacy rules needed when EzPlatform used in combination with LegacyBridge
  include /etc/nginx/includes.d/ez_params.d/ez_legacy_rewrite_params;
  {% endblock -%}

  # Include remaining ez rewrite rules
  # Access to repository images in single server setup
  include /etc/nginx/includes.d/ez_params.d/ez_rewrite_params;

  {% block server_basic -%}
  add_header Fastcgi-Cache $upstream_cache_status;

  # Specify a charset
  charset utf-8;

  # Set the max body size equal to PHP's max POST size.
  client_max_body_size {{ php_post_max_size | default('25m') | lower }};

  {% endblock -%}

  {% block cache_conditions -%}
  {% if item.value.cache is defined and item.value.cache.enabled | default(false) -%}
  # Fastcgi cache conditions
  set $skip_cache 0;
  if ($query_string != "") {
    set $skip_cache 1;
  }
  if ($request_uri ~* "{{ item.value.cache.skip_cache_uri | default(nginx_skip_cache_uri) }}") {
    set $skip_cache 1;
  }
  if ($http_cookie ~* "{{ item.value.cache.skip_cache_cookie | default(nginx_skip_cache_cookie) }}") {
    set $skip_cache 1;
  }

  {% endif -%}
  {% endblock -%}

  {% block https -%}
  {% if ssl_enabled -%}
  # SSL configuration
  include h5bp/directive-only/ssl.conf;
  {% if ssl_stapling_enabled -%}
  include h5bp/directive-only/ssl-stapling.conf;
  {% endif -%}

  ssl_dhparam /etc/nginx/ssl/dhparams.pem;
  ssl_buffer_size 1400; # 1400 bytes to fit in one MTU

  {% if item.value.ssl.provider | default('manual') != 'self-signed' -%}
  add_header Strict-Transport-Security "max-age={{ [hsts_max_age, hsts_include_subdomains, hsts_preload] | reject('none') | join('; ') }}";
  {% endif -%}

  {% if item.value.ssl.client_cert_url is defined -%}
  ssl_verify_client       on;
  ssl_client_certificate  {{ nginx_ssl_path }}/client-{{ (item.value.ssl.client_cert_url | hash('md5'))[:7] }}.crt;
  {% endif -%}

  {% if item.value.ssl.provider | default('manual') == 'manual' and item.value.ssl.cert is defined and item.value.ssl.key is defined -%}
  ssl_certificate         {{ nginx_path }}/ssl/{{ item.value.ssl.cert | basename }};
  ssl_certificate_key     {{ nginx_path }}/ssl/{{ item.value.ssl.key | basename }};

  {% elif item.value.ssl.provider | default('manual') == 'letsencrypt' -%}
  ssl_certificate         {{ nginx_path }}/ssl/letsencrypt/{{ item.key }}-{{ letsencrypt_cert_ids[item.key] }}-bundled.cert;
  ssl_certificate_key     {{ nginx_path }}/ssl/letsencrypt/{{ item.key }}.key;

  {% elif item.value.ssl.provider | default('manual') == 'self-signed' -%}
  ssl_certificate         {{ nginx_path }}/ssl/{{ item.key }}.cert;
  ssl_trusted_certificate {{ nginx_path }}/ssl/{{ item.key }}.cert;
  ssl_certificate_key     {{ nginx_path }}/ssl/{{ item.key }}.key;

  {% endif -%}
  {% endif -%}
  {% endblock -%}

  {% block acme_challenge -%}
  include acme-challenge-location.conf;

  {% endblock -%}

  {% block includes_d -%}
  include /etc/nginx/includes.d/all/*.conf;
  include /etc/nginx/includes.d/{{ item.key }}/*.conf;
  {% endblock -%}

  {% block h5bp -%}
  {% if h5bp_cache_file_descriptors_enabled -%}
  include h5bp/directive-only/cache-file-descriptors.conf;
  {% endif -%}

  {% if h5bp_extra_security_enabled -%}
  include h5bp/directive-only/extra-security.conf;
  {% endif -%}

  {% if h5bp_no_transform_enabled -%}
  include h5bp/directive-only/no-transform.conf;
  {% endif -%}

  {% if h5bp_x_ua_compatible_enabled -%}
  include h5bp/directive-only/x-ua-compatible.conf;
  {% endif -%}

  {% if h5bp_cache_busting_enabled -%}
  include h5bp/location/cache-busting.conf;
  {% endif -%}

  {% if h5bp_cross_domain_fonts_enabled -%}
  include h5bp/location/cross-domain-fonts.conf;
  {% endif -%}

  {% if h5bp_expires_enabled -%}
  include h5bp/location/expires.conf;
  {% endif -%}

  {% if h5bp_protect_system_files_enabled -%}
  include h5bp/location/protect-system-files.conf;
  {% endif -%}

  {% endblock %}

  {% block location_php -%}
  location / {
    location ~ ^/app\.php(/|$) {
      {% block location_php_basic -%}

      {% block fastcgi_basic -%}
      include /etc/nginx/includes.d/ez_params.d/ez_fastcgi_params;
      # FPM socket
      # Possible values : unix:/var/run/php5-fpm.sock or 127.0.0.1:9000
      fastcgi_pass unix:/var/run/php-fpm-ezplatform.sock;

      # FPM fastcgi_read_timeout
      fastcgi_read_timeout {{ nginx_fastcgi_read_timeout | default('90s') }};

      ## eZ Platform ENVIRONMENT variables, used for customizing app.php execution (not used by console commands)

      # Environment.
      # Possible values: "prod" and "dev" out-of-the-box, other values possible with proper configuration
      # Make sure to comment the "ez_params.d/ez_prod_rewrite_params" include above in dev.
      # Defaults to "prod" if omitted
      {% if env == 'dev' -%}
      fastcgi_param SYMFONY_ENV dev;
      fastcgi_param SYMFONY_DEBUG 1;
      fastcgi_param SYMFONY_TMP_DIR /tmp/ezplatformcache/;
      {% endif -%}

      {% if env == 'qa' -%}
        fastcgi_param SYMFONY_ENV qa;
      {% endif -%}

      {% if env == 'prod' -%}
        fastcgi_param SYMFONY_ENV prod;
      {% endif -%}

      {%- endblock %}

      {% endblock -%}

      {% block cache_config -%}
      {% if item.value.cache is defined and item.value.cache.enabled | default(false) -%}
      # Fastcgi cache settings
      fastcgi_cache ezplatform;
      fastcgi_cache_valid {{ item.value.cache.duration | default(nginx_cache_duration) }};
      fastcgi_cache_bypass $skip_cache;
      fastcgi_no_cache $skip_cache;
      fastcgi_cache_background_update {{ item.value.cache.background_update | default(nginx_cache_background_update) }};

      {% endif -%}
      {% endblock -%}
      # Disable .php(3) and other executable extensions in the var directory
      location ~ ^/var/.*(?i)\.(php3?|phar|phtml|sh|exe|pl|bin)$ {
          return 403;
      }
    }
  }
  {%- endblock %}

  {% block logs -%}
  access_log   {{ www_root }}/{{ item.key }}/logs/access.log main;
  error_log    {{ www_root }}/{{ item.key }}/logs/error.log;
  {% endblock %}

  include /etc/nginx/includes.d/ez_params.d/ez_server_params;
}

{% block redirects_https %}
{% if ssl_enabled %}
# Redirect to https
server {
  listen [::]:80;
  listen 80;
  server_name {{ site_hosts_canonical | union(multisite_subdomains_wildcards) | join(' ') }};

  {{ self.acme_challenge() -}}

  {{ self.includes_d() -}}

  location / {
    return 301 https://$host$request_uri;
  }
}

{% endif %}
{% endblock -%}

{%- block redirects_domains %}
{% if site_hosts_redirects | default([]) | count %}
# Redirect some domains
{% endif %}
{% for host in item.value.site_hosts if host.redirects | default([]) %}
server {
  {% if ssl_enabled -%}
  listen [::]:443 ssl http2;
  listen 443 ssl http2;
  {% endif -%}
  listen [::]:80;
  listen 80;
  server_name {{ host.redirects | join(' ') }};

  {{ self.https() -}}

  {{ self.acme_challenge() -}}

  {{ self.includes_d() -}}

  location / {
    return 301 {{ ssl_enabled | ternary('https', 'http') }}://{{ host.canonical }}$request_uri;
  }
}
{% endfor %}
{% endblock %}
